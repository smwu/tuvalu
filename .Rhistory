PEP <- apply(post_samp[, 2:4], 2, function(x) mean(x <= 0))
obesity_PEP <- get_PEP(fit_ob1)
morbid_obesity_PEP <- get_PEP(fit_ob3)
# From posterior samples, get posterior error probability (PEP) to control
# false discovery rate and S-type errors.
# PEP is P(est <= 0) in this case because all the estimates are positive
get_PEP <- function(fit) {
post_samp <- as.data.frame(fit)
PEP <- apply(post_samp[, 2:4], 2, function(x) mean(x <= 0))
return(PEP)
}
obesity_PEP <- get_PEP(fit_ob1)
morbid_obesity_PEP <- get_PEP(fit_ob3)
weight_PEP <- get_PEP(fit_wt)
mean(exp(temp$latent_class1) <= 1)
# Summary regression Table 2 OPTION 2 WITH PEP
regr_df <- as.data.frame(matrix(NA, nrow = 4, ncol = 12))
regr_df[, 12] <- c("Mixed-Local (Ref)", "Neo-Local", "Mixed-Imported", "Imported")
regr_df[, 1] <- obesity_prev
regr_df[1, 2:3] <- c(1, NA)
regr_df[2:4, 2:3] <- cbind(obesity[2:4, 1],
apply(obesity[2:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
regr_df[, 4] <- obesity_PEP
obesity <- format(round(get_output(fit_ob1, exponentiate = TRUE), 3), nsmall = 2)
get_output <- function(fit, exponentiate = TRUE) {
if (exponentiate) {
output <- data.frame(exp(fit$coefficients),
exp(posterior_interval(fit, prob = 0.95)[1:length(fit$coefficients),]))
colnames(output) <- c("Cond'l OR", "2.5%", "97.5%")
cutoff <- 1
} else {
output <- data.frame(fit$coefficients,
posterior_interval(fit, prob = 0.95)[1:length(fit$coefficients),])
colnames(output) <- c("Mean", "2.5%", "97.5%")
cutoff <- 0
}
output$signif <- 0
output$signif[(output$`2.5%` < cutoff) & (output$`97.5` < cutoff)] <- 1
output$signif[(output$`2.5%` > cutoff) & (output$`97.5` > cutoff)] <- 1
print(paste0("Number of observations: ", nobs(fit)))
print(output)
}
# `get_prev` calculates the prevalences given a vector of coefficients from
# a logistic regression model, where the first value corresponds to the log-odds
# in the reference group
# Since odds = prev/(1-prev), prev = odds/(1+odds)
get_prevs <- function(odds_coefs) {
prev <- numeric(length(odds_coefs))
prev[1] <- exp(odds_coefs[1]) / (1 + exp(odds_coefs[1]))
for (i in 2:length(odds_coefs)) {
# odds of level = OR * baseline_odds
odds_i <- exp(odds_coefs[i]) * exp(odds_coefs[1])
prev[i] <- odds_i / (1 + odds_i)
}
return(prev)
}
# From posterior samples, get posterior error probability (PEP) to control
# false discovery rate and S-type errors.
# PEP is P(est <= 0) in this case because all the estimates are positive
get_PEP <- function(fit) {
post_samp <- as.data.frame(fit)
PEP <- apply(post_samp[, 2:4], 2, function(x) mean(x <= 0))
return(PEP)
}
obesity <- format(round(get_output(fit_ob1, exponentiate = TRUE), 3), nsmall = 2)
obesity$signif <- as.integer(obesity$signif)
obesity$signif[1] <- 0  # get rid of significance for reference level
morbid_obesity <- format(round(get_output(fit_ob3, exponentiate = TRUE), 3), nsmall = 2)
morbid_obesity$signif <- as.integer(morbid_obesity$signif)
morbid_obesity$signif[1] <- 0  # get rid of significance for reference level
weight <- format(round(get_output(fit_wt, exponentiate = FALSE), 3), nsmall = 2)
weight$signif <- as.integer(weight$signif)
weight$signif[1] <- 0  # get rid of significance for reference level
obesity_prev <- format(round(get_prevs(fit_ob1$coefficients[1:4]), 3), nsmall = 2)
morbid_obesity_prev <- format(round(get_prevs(fit_ob3$coefficients[1:4]), 3), nsmall = 2)
obesity_PEP <- get_PEP(fit_ob1)
morbid_obesity_PEP <- get_PEP(fit_ob3)
weight_PEP <- get_PEP(fit_wt)
# Summary regression Table 2 OPTION 2 WITH PEP =================================
regr_df <- as.data.frame(matrix(NA, nrow = 4, ncol = 12))
regr_df[, 12] <- c("Mixed-Local (Ref)", "Neo-Local", "Mixed-Imported", "Imported")
regr_df[, 1] <- obesity_prev
regr_df[1, 2:3] <- c(1, NA)
regr_df[2:4, 2:3] <- cbind(obesity[2:4, 1],
apply(obesity[2:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
regr_df[, 4] <- obesity_PEP
regr_df[, 5] <- morbid_obesity_prev
regr_df[1, 6:7] <- c(1, NA)
regr_df[2:4, 4] <- obesity_PEP
regr_df[, 5] <- morbid_obesity_prev
regr_df[1, 6:7] <- c(1, NA)
regr_df[1, 6:8] <- c(1, NA)
regr_df[1, 2:4] <- c(1, NA, NA)
regr_df[1, 6:8] <- c(1, NA, NA)
regr_df[1, 6:8] <- c(1, NA, NA)
regr_df[2:4, 6:7] <- cbind(morbid_obesity[2:4, 1],
apply(morbid_obesity[2:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
regr_df[2:4, 8] <- morbid_obesity_PEP
regr_df[1:4, 9:10] <- cbind(weight[1:4, 1],
apply(weight[1:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
# From posterior samples, get posterior error probability (PEP) to control
# false discovery rate and S-type errors.
# PEP is P(est <= 0) in this case because all the estimates are positive
get_PEP <- function(fit, cols) {
post_samp <- as.data.frame(fit)
PEP <- apply(post_samp[, cols], 2, function(x) mean(x <= 0))
return(PEP)
}
obesity_PEP <- get_PEP(fit_ob1, 1:3)
morbid_obesity_PEP <- get_PEP(fit_ob3, 1:3)
weight_PEP <- get_PEP(fit_wt, 1:4)
obesity_PEP <- get_PEP(fit_ob1, 2:4)
morbid_obesity_PEP <- get_PEP(fit_ob3, 2:4)
weight_PEP <- get_PEP(fit_wt, 1:4)
regr_df[2:4, 4] <- obesity_PEP
regr_df[, 5] <- morbid_obesity_prev
regr_df[1, 6:8] <- c(1, NA, NA)
regr_df[2:4, 6:7] <- cbind(morbid_obesity[2:4, 1],
apply(morbid_obesity[2:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
regr_df[2:4, 8] <- morbid_obesity_PEP
regr_df[1:4, 9:10] <- cbind(weight[1:4, 1],
apply(weight[1:4, ], 1,
function(x) paste0("[",x[2], ", ", x[3], "]")))
regr_df[, 11] <- weight_PEP
regr_df %>% gt(rowname_col = "V12") %>%
tab_header(title = "Table 2: Association between dietary patterns and obesity, morbid obesity, and weight") %>%
tab_stubhead(label = "Pattern") %>%
tab_spanner(
label = "Obesity (BMI >= 30)",
columns = c(V1, V2, V3, V4)
) %>%
tab_spanner(
label = "Morbid Obesity (BMI >= 40)",
columns = c(V5, V6, V7, V8)
) %>%
tab_spanner(
label = "Weight (kg)",
columns = c(V9, V10, V11)
) %>%
tab_options(  # header color
stub.border.width = px(2),
column_labels.background.color = "#edf8fb"
) %>%
sub_missing() %>%
cols_align(
align = "left"
) %>%
tab_style(  # bold signif obesity
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V2, V3),
rows = which(obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V6, V7),
rows = which(morbid_obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V9, V10),
rows = which(weight$signif[1:4] == 1)
)
)  %>%
cols_label(
V1 = "Post Prev",
V2 = "Post OR",
V3 = "95% Cred Int",
V4 = "Pr(OR <= 1)",
V5 = "Post Prev",
V6 = "Post OR",
V7 = "95% Cred Int",
V8 = "Pr(OR <= 1)",
V9 = "Post Mean",
V10 = "95% Cred Int",
V11 = "Pr(Mean <= 0)")
obesity_PEP <- format(round(get_PEP(fit_ob1, 2:4), 3), nsmall = 2)
morbid_obesity_PEP <- format(round(get_PEP(fit_ob3, 2:4), 3), nsmall = 2)
weight_PEP <- format(round(get_PEP(fit_wt, 1:4), 3), nsmall = 2)
regr_df[2:4, 4] <- obesity_PEP
regr_df[2:4, 8] <- morbid_obesity_PEP
regr_df[, 11] <- weight_PEP
regr_df %>% gt(rowname_col = "V12") %>%
tab_header(title = "Table 2: Association between dietary patterns and obesity, morbid obesity, and weight") %>%
tab_stubhead(label = "Pattern") %>%
tab_spanner(
label = "Obesity (BMI >= 30)",
columns = c(V1, V2, V3, V4)
) %>%
tab_spanner(
label = "Morbid Obesity (BMI >= 40)",
columns = c(V5, V6, V7, V8)
) %>%
tab_spanner(
label = "Weight (kg)",
columns = c(V9, V10, V11)
) %>%
tab_options(  # header color
stub.border.width = px(2),
column_labels.background.color = "#edf8fb"
) %>%
sub_missing() %>%
cols_align(
align = "left"
) %>%
tab_style(  # bold signif obesity
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V2, V3),
rows = which(obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V6, V7),
rows = which(morbid_obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V9, V10),
rows = which(weight$signif[1:4] == 1)
)
)  %>%
cols_label(
V1 = "Post Prev",
V2 = "Post OR",
V3 = "95% Cred Int",
V4 = "Pr(OR <= 1)",
V5 = "Post Prev",
V6 = "Post OR",
V7 = "95% Cred Int",
V8 = "Pr(OR <= 1)",
V9 = "Post Mean",
V10 = "95% Cred Int",
V11 = "Pr(Mean <= 0)")
regr_df %>% gt(rowname_col = "V12") %>%
tab_header(title = "Table 2: Association between dietary patterns and obesity, morbid obesity, and weight") %>%
tab_stubhead(label = "Pattern") %>%
tab_spanner(
label = "Obesity (BMI >= 30)",
columns = c(V1, V2, V3, V4)
) %>%
tab_spanner(
label = "Morbid Obesity (BMI >= 40)",
columns = c(V5, V6, V7, V8)
) %>%
tab_spanner(
label = "Weight (kg)",
columns = c(V9, V10, V11)
) %>%
tab_options(  # header color
stub.border.width = px(2),
column_labels.background.color = "#edf8fb"
) %>%
sub_missing() %>%
cols_align(
align = "left"
) %>%
tab_style(  # bold signif obesity
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V2, V3),
rows = which(obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V6, V7),
rows = which(morbid_obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V9, V10),
rows = which(weight$signif[1:4] == 1)
)
)  %>%
cols_label(
V1 = "Post Prev",
V2 = "Post OR",
V3 = "95% Cred Int",
V4 = "P(OR <= 1)",
V5 = "Post Prev",
V6 = "Post OR",
V7 = "95% Cred Int",
V8 = "P(OR <= 1)",
V9 = "Post Mean",
V10 = "95% Cred Int",
V11 = "P(Mean <= 0)")
regr_df %>% gt(rowname_col = "V12") %>%
tab_header(title = "Table 2: Association between dietary patterns and obesity, morbid obesity, and weight") %>%
tab_stubhead(label = "Pattern") %>%
tab_spanner(
label = "Obesity (BMI >= 30)",
columns = c(V1, V2, V3, V4)
) %>%
tab_spanner(
label = "Morbid Obesity (BMI >= 40)",
columns = c(V5, V6, V7, V8)
) %>%
tab_spanner(
label = "Weight (kg)",
columns = c(V9, V10, V11)
) %>%
tab_options(  # header color
stub.border.width = px(2),
column_labels.background.color = "#edf8fb"
) %>%
sub_missing() %>%
cols_align(
align = "left"
) %>%
tab_style(  # bold signif obesity
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V2, V3, V4),
rows = which(obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V6, V7, V8),
rows = which(morbid_obesity$signif[1:4] == 1)
)
)  %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(V9, V10, V11),
rows = which(weight$signif[1:4] == 1)
)
)  %>%
cols_label(
V1 = "Post Prev",
V2 = "Post OR",
V3 = "95% Cred Int",
V4 = "P(OR <= 1)",
V5 = "Post Prev",
V6 = "Post OR",
V7 = "95% Cred Int",
V8 = "P(OR <= 1)",
V9 = "Post Mean",
V10 = "95% Cred Int",
V11 = "P(Mean <= 0)")
df_table_2 <- regr_df[-12]
rownames(df_table_2) <- regr_df[, 12]
colnames(df_table_2) <- c("Post Prev Ob", "Post OR Ob", "95% Cred Int Ob", "PEP Ob",
"Post Prev MOb", "Post OR MOb", "95% Cred Int MOb", "PEP MOb",
"Post Mean Wt", "95% Cred Int Wt", "PEP Wt")
write.csv(df_table_2, "df_table_2_withPEP.csv")
get_strat_est <- function(fit, i) {
return(c(nobs(fit), sum(fit$y == 1), "1 ref",
paste0(outputs[[i]][2,1], " [", outputs[[i]][2, 2], ", ",
outputs[[i]][2,3], "]"),
paste0(outputs[[i]][3,1], " [", outputs[[i]][3, 2], ", ",
outputs[[i]][3,3], "]"),
paste0(outputs[[i]][4,1], " [", outputs[[i]][4, 2], ", ",
outputs[[i]][4,3], "]")))
}
#############
load("ob1_strat_models.RData")
outputs <- lapply(list(fit_ob1_f, fit_ob1_m, fit_ob1_hs, fit_ob1_more_hs,
fit_ob1_no_smoke, fit_ob1_smoke,
fit_ob1_no_ncd, fit_ob1_ncd, fit_ob1_exer_h,
fit_ob1_exer_m, fit_ob1_exer_l),
function(x) format(round(get_output(x), 3), nsmall = 2))
strat_df <- as.data.frame(matrix(NA, nrow = 11, ncol = 7))
strat_df[, 7] <- c("Male", "Female", "<=High School", ">High School",
"Non-Smokers", "Current Smokers", "No NCD Reported",
"NCD Reported", "High", "Medium",
"Low")
strat_df[1, -7] <- get_strat_est(fit_ob1_f, 1)
strat_df[2, -7] <- get_strat_est(fit_ob1_m, 2)
strat_df[3, -7] <- get_strat_est(fit_ob1_hs, 3)
strat_df[4, -7] <- get_strat_est(fit_ob1_more_hs, 4)
strat_df[5, -7] <- get_strat_est(fit_ob1_no_smoke, 5)
strat_df[6, -7] <- get_strat_est(fit_ob1_smoke, 6)
strat_df[7, -7] <- get_strat_est(fit_ob1_no_ncd, 7)
strat_df[8, -7] <- get_strat_est(fit_ob1_ncd, 8)
strat_df[9, -7] <- get_strat_est(fit_ob1_exer_h, 9)
strat_df[10, -7] <- get_strat_est(fit_ob1_exer_m, 10)
strat_df[11, -7] <- get_strat_est(fit_ob1_exer_l, 11)
strat_df %>% gt(rowname_col = "V7") %>%
tab_header(title = "Table 3: Subgroup analyses of the association between dietary patterns and obesity") %>%
tab_stubhead(label = "Covariate") %>%
tab_spanner(
label = "Posterior OR estimate (95% credible interval)",
columns = c(V3, V4, V5, V6)
) %>%
tab_options(  # header color
stub.border.width = px(2),
column_labels.background.color = "#edf8fb",
row_group.background.color = "#feebe2"
)  %>%
cols_label(
V1 = "N",
V2 = "Cases",
V3 = "Mixed-Local",
V4 = "Neo-Local",
V5 = "Mixed-Imported",
V6 = "Imported") %>%
tab_row_group(
label = "Exercise",
rows = c(9, 10, 11)
) %>%
tab_row_group(
label = "Reported NCD Status",
rows = c(7, 8)
) %>%
tab_row_group(
label = "Smoking Status",
rows = c(5, 6)
) %>%
tab_row_group(
label = "Education",
rows = c(3, 4)
) %>%
tab_row_group(
label = "Sex",
rows = c(1, 2)
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = V4,
rows = c(2, 6, 8)
)
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = V6,
rows = c(3, 5, 7, 10)
)
)
# Plot modal consumption levels for each pattern
plot_pattern_modes <- function(model, names_list = NULL) {
est_item_probs <- model$probs
mode_item_probs <- lapply(est_item_probs, function(x) apply(x, 1, which.max))
mode_item_probs <- as.data.frame(do.call("rbind", mode_item_probs))
if (is.null(names_list)) {
mode_item_probs$Item <- fct_rev(factor(rownames(mode_item_probs),
levels=rownames(mode_item_probs)))
} else {
mode_item_probs$Item <- fct_rev(factor(rownames(mode_item_probs),
levels=names_list))
}
colnames(mode_item_probs) <- c("Neo-Local", "Mixed-Local", "Mixed-Imported",
"Imported", "Item")
mode_plot <- mode_item_probs %>% gather("Pattern", "Level", -Item)
mode_plot$Pattern <- fct_rev(factor(mode_plot$Pattern, levels =
c("Imported", "Mixed-Imported",
"Mixed-Local", "Neo-Local")))
mode_plot %>% ggplot(aes(x=Pattern, y=Item, fill=Level)) +
geom_tile(color="black") +
geom_text(aes(label = Level), col="white", cex=2) +
scale_fill_gradient(trans="reverse") +
theme(legend.position="none") +
scale_x_discrete(labels = c("Neo-\nLocal", "Mixed-\nLocal",
"Mixed-\nImported", "Imported"))
}
plot_pattern_modes(lc4, names_by_local)
plot_pattern_modes(lc4, names_by_group)
df_table_3 <- strat_df[-7]
View(df_table_3)
rownames(df_table_3) <- strat_df[, 7]
colnames(df_table_3) <- c("N", "Cases", "Mixed-Local", "Neo-Local",
"Mixed-Imported", "Imported")
write.csv(df_table_3, "df_table_3.csv")
